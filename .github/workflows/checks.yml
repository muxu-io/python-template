name: Reusable Python Checks

on:
  workflow_call:
    inputs:
      python-versions:
        description: 'JSON array of Python versions to test'
        required: false
        default: '["3.9", "3.10", "3.11", "3.12"]'
        type: string
      source-directory:
        description: 'Source directory to scan (default: src/)'
        required: false
        default: 'src/'
        type: string
      requirements-file:
        description: 'Requirements file path (default: requirements.txt)'
        required: false
        default: 'requirements.txt'
        type: string
      enable-mqtt-broker:
        description: 'Whether to start MQTT broker for tests'
        required: false
        default: true
        type: boolean
      mqtt-config-path:
        description: 'Path to Mosquitto config file'
        required: false
        default: '.ci/mosquitto.conf'
        type: string

jobs:
  commit-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install commitlint
        run: |
          npm install --global @commitlint/config-conventional @commitlint/cli

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --config .github/.commitlintrc.json --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade "setuptools>=65.5.1"
          pip install black ruff bandit[toml] pip-audit

      - name: Check code formatting with Black
        run: black --check --diff .

      - name: Lint with Ruff
        run: ruff check .

      - name: Security scan with Bandit
        run: bandit -r ${{ inputs.source-directory }} -f json -o bandit-report.json || bandit -r ${{ inputs.source-directory }}

      - name: Display Bandit security report
        run: |
          echo "üìã Bandit Security Scan Results:"
          if [ -f bandit-report.json ]; then
            cat bandit-report.json | jq . || cat bandit-report.json
          else
            echo "No bandit-report.json found - check previous step"
          fi
        continue-on-error: true

      - name: Check for known vulnerabilities
        run: |
          echo "üîç Scanning dependencies for known vulnerabilities..."
          
          if command -v pip-audit >/dev/null 2>&1; then
            echo "Using pip-audit for vulnerability scanning..."
            pip-audit --format=json --output=vulnerability-report.json || pip-audit
          else
            echo "Installing pip-audit..."
            pip install pip-audit
            pip-audit --format=json --output=vulnerability-report.json || pip-audit
          fi

      - name: Scan for secrets with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ""
          extra_args: --debug --only-verified

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ${{ fromJson(inputs.python-versions) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start Mosquitto MQTT broker
        if: inputs.enable-mqtt-broker
        uses: namoshek/mosquitto-github-action@v1
        with:
          version: '2.0'
          ports: '1883:1883'
          config: ${{ github.workspace }}/${{ inputs.mqtt-config-path }}
          container-name: 'mosquitto'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ${{ inputs.requirements-file }}
          pip install -e .

      - name: Verify MQTT broker
        if: inputs.enable-mqtt-broker
        run: |
          echo "üîç Verifying MQTT broker is ready..."
          
          echo "üìã Mosquitto container status:"
          docker ps --filter "name=mosquitto" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
          
          timeout 30 bash -c 'until nc -z localhost 1883; do echo "Waiting for MQTT broker..."; sleep 1; done'
          echo "‚úÖ MQTT broker is accessible on port 1883"
          
          echo "üìã Recent Mosquitto logs:"
          docker logs --tail 10 mosquitto || echo "No logs available"

      - name: Test with pytest
        run: |
          echo "üß™ Starting pytest with timeout protection..."
          timeout 600 pytest -v --tb=short --maxfail=5 -x
        env:
          MQTT_BROKER_HOST: localhost
          MQTT_BROKER_PORT: 1883
          PYTEST_TIMEOUT: 30

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/